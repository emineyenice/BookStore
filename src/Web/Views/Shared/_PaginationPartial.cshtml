@model PaginationInfoViewModel
@{
    //önce mevcut route datayı alıp sonra ona sayfa route değerini ekleyeceğiz
    var prevRoutData = Context.Request.Query.ToDictionary(x => x.Key, x => x.Value.ToString());
    prevRoutData.Remove("page");
    prevRoutData.Add("page", (Model.Page - 1).ToString());

    var nextRoutData = Context.Request.Query.ToDictionary(x => x.Key, x => x.Value.ToString());
    nextRoutData.Remove("page");
    nextRoutData.Add("page", (Model.Page + 1).ToString());

    @*foreach (var item in Context.Request.Query)
        {
            <p>@item.Key : @item.Value</p>
        }*@
}
<div class="d-flex justify-content-between align-items-baseline">
    <a asp-action="Index" asp-all-route-data="@prevRoutData" class="btn btn-dark @(Model.HasPrev ? "" : "disabled")">&laquo; <span class="d-none d-sm-inline">Previous</span> </a>
    <span>Showing @Model.ItemsOnPage of @Model.TotalItems Items (Pages @Model.Page / @Model.TotalPages)  </span>
    <a asp-action="Index" asp-all-route-data="@nextRoutData" class="btn btn-dark  @(Model.HasNext ? "" : "disabled")"> <span class="d-none d-sm-inline">Next</span> &raquo;</a>

</div>
